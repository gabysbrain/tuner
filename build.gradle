
apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0'
  }
}

ext {
  scalaVersion = '2.10'
  breezeVersion = '0.9'
}

repositories {
  mavenCentral()
  maven {
    url "http://repo.spray.io/"
  }
}

dependencies {

  compile 'org.scala-lang:scala-library:2.10.3'
  compile 'org.scala-lang:scala-swing:$scalaVersion'
  compile "com.tomtorsneyweir:datescala_$scalaVersion:0.9"
  compile "net.liftweb:lift-json_$scalaVersion:2.5"
  compile "tablelayout:TableLayout:20050920"
  compile "org.prefuse:prefuse:beta-20060220"
  compile "org.scalanlp:breeze_$scalaVersion:$breezeVersion"
  compile "com.typesafe.akka:akka-actor_$scalaVersion:2.2.1"
  compile "org.jogamp.gluegen:gluegen-rt-main:2.0.2"
  compile "org.jogamp.jogl:jogl-all-main:2.0.2"
  compile 'org.japura:japura:1.18.3'

  compile fileTree(dir: 'lib', include: '*.jar')

  testCompile "org.scalacheck:scalacheck_$scalaVersion:1.10.0"
  testCompile "org.specs2:specs2_$scalaVersion:2.3.11"
}

mainClassName = "tuner.Tuner"

// set javac compile options
compileJava {
  options.deprecation = true
  options.compilerArgs << "-Xlint:unchecked"
}

test {
  testLogging {
    exceptionFormat = 'full'
  }
}

jacocoTestReport {
  reports {
    xml.enabled = true // needed for coveralls
    html.enabled = true
  }
}

scaladoc {
  destinationDir = file("doc/site/app/api")
}

tasks.withType(ScalaCompile) {
  // use incremental compilation with zinc
  scalaCompileOptions.useAnt = false
}

defaultTasks 'build'

